{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFechGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setcategory","useState","inputvalue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","Protypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechGifs","key","GitExpertApp","props","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"wPAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAuB1C,OACI,6BAGI,0BAAMC,SAlBK,SAACC,GAEhBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACnCN,EAAc,QAUd,2BACAO,KAAM,OACNC,MAAOT,EACPU,SA3BgB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,aAmC/BZ,EAAYe,UAAU,CAClBd,Y,OAAYe,EAASC,KAAKC,YC1CvB,IAAMC,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAG/B,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCRHK,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZN,EAFY,iDAEmCO,UAAUF,GAF7C,+DAIEG,MAAOR,GAJT,cAIXS,EAJW,gBAKIA,EAAKC,OALT,uBAKVC,EALU,EAKVA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIE,cAAL,aAAC,EAAYC,iBAAiBjB,QAIzCkB,QAAQC,IAAIP,GAfK,kBAiBVA,GAjBU,4CAAF,sDCGPQ,EAAU,SAAC,GAAgB,IAAff,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAc,IAAD,EAEXxB,mBAAS,CAC/B8B,KAAK,GACLU,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA6BrC,OArBAC,qBAAW,WAEPpB,EAAQC,GACPoB,MAAK,SAAAC,GACFC,YAAW,WAEPT,QAAQC,IAAIO,GAEZH,EAAS,CACLZ,KAAKe,EACLL,SAAQ,MAGd,UAIR,CAAChB,IAIIiB,EDzBuBM,CAAYvB,GAA9BW,EAHuB,EAG5BL,KAAYU,EAHgB,EAGhBA,QAGnB,OACI,oCACA,4BAAKhB,GAEJgB,GAAW,sCAEN,yBAAKpB,UAAU,aAGXe,EAAOH,KAAI,SAAAC,GAAG,OAEZ,kBAAC,EAAD,eACAe,IAAKf,EAAIC,IACLD,UEcTgB,EAjCM,SAAAC,GAAU,IAAD,EAGUlD,mBAAS,CAAC,mBAHpB,mBAGnBmD,EAHmB,KAGPC,EAHO,KAO1B,OACI,oCACE,6CACA,kBAAC,EAAD,CAAarD,YAAaqD,IAC1B,6BAEA,4BAEMD,EAAWnB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACGwB,IAAKxB,EACLA,SAAUA,UChBjC6B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e85c437.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport Protypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategory}) => {\r\n\r\n    const [inputvalue, setinputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault();  //para prevenir conportamiento por default\r\n\r\n        ///console.log(\"Submit hecho\");\r\n\r\n        if (inputvalue.trim().length > 2) {\r\n            \r\n            setcategory(cats => [inputvalue,...cats]);\r\n            setinputValue(' ');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n                {/* <h1>{inputvalue}</h1> */}\r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n            type= \"text\"\r\n            value={inputvalue}\r\n            onChange={handleInputChange}\r\n            />\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setcategory:Protypes.func.isRequired\r\n}\r\n","\r\nimport React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({title,url}) => {// get las propiedades especificasa\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs= async(category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FwxBmIpYZo2fp4kc7WGTBDh2KlaYYgWi`;//encodeURI renplaza los espacios  en dolares\r\n            \r\n     const resp = await fetch (url);\r\n     const {data} = await resp.json();\r\n     \r\n     const gifs = data.map(img =>{//para traer lo que quieras de un API\r\n         return{\r\n             id: img.id,\r\n             title:img.title,\r\n             url:img.images?.downsized_medium.url\r\n         }\r\n     })\r\n\r\n     console.log(gifs);\r\n\r\n    return  gifs;\r\n    //setimage(gifs);// lo asignas al arreglo de hook image\r\n    }","\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFechGifs } from '../hooks/useFechGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n   \r\n   \r\n    const {data:images,loading} = useFechGifs(category);//cada vez el componente cambie va volver a disparar \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>  \r\n\r\n        {loading && <p>Loading</p>}\r\n            \r\n              <div className=\"card-grid\">\r\n                \r\n                {\r\n                  images.map(img =>(\r\n\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}//mandas cada propiedad  de forma independiente\r\n                    // img={img}\r\n                    />\r\n\r\n                  ))\r\n\r\n                } \r\n    \r\n            \r\n        </div>\r\n       \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFechGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true    \r\n    });\r\n\r\n         \r\n    useEffect (()=>{\r\n\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setTimeout(()=>{\r\n                \r\n                console.log(imgs);\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n            },3000);\r\n           \r\n        });\r\n\r\n    },[category]);\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GitExpertApp = props => {\r\n\r\n  \r\n    const [categories, setcategories] = useState(['Hunterx Hunter']);\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n          <h2> GitExpertApp</h2>  \r\n          <AddCategory setcategory={setcategories}/>\r\n          <hr/>\r\n          \r\n          <ol>\r\n              {\r\n                categories.map(category  =>(\r\n                    <GifGrid \r\n                       key={category}\r\n                       category={category}\r\n                       \r\n                    />\r\n               \r\n               ))\r\n              }\r\n              \r\n          </ol>\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\n\nReactDOM.render(\n\n    <GitExpertApp/>,\n\n  document.getElementById('root')\n\n);\n\n\n"],"sourceRoot":""}